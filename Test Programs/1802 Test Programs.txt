
LDI 0x0F
PLO R(1).0
LDI 0x00
PHI R(1).1
SEX R1
LDI 0x55
STR R1

// Memory store --- Load D with 0x55 store to Address pointed to by R(1)
// virtual system RAM, 0x0000 to 0x0039 ->
byte virtRAM[] =  { 0xF8, 0x0F, 0xA1, 0xF8, 0x00, 0xB1, 0xE1, 0xF8,
					0x55, 0x51, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4,
					0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4,
					0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4,
					0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4,
					0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4,
					0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4,
					0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4 };



LDI 0x0F
PLO R(1).0
LDI 0x00
PHI R(1).1
SEX R1
OUT 1

// I/O Output --- Set R(1)=0x000F, Set X=R(1), Mem @ R(1) output to data bus
// N0, N1, N2 indicate the lower nibble of the 6N Output instruction
// virtual system RAM, 0x0000 to 0x0039 -> 
byte virtRAM[] =  { 0xF8, 0x0F, 0xA1, 0xF8, 0x00, 0xB1, 0xE1, 0x61,
					0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0x55,
					0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4,
					0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4,
					0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4,
					0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4,
					0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4,
					0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4 };



LDI 0x0F
PLO R(1).0
LDI 0x00
PHI R(1).1
SEX R1
INP 1

// I/O Input --- Set R(1)=0x000F, Set X=R(1), Input from data bus to Mem @ R(1)
// N0, N1, N2 indicate the lower nibble of the 6N Output instruction
// virtual system RAM, 0x0000 to 0x0039 -> 
byte virtRAM[] =  { 0xF8, 0x0F, 0xA1, 0xF8, 0x00, 0xB1, 0xE1, 0x69,
					0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0x55,
					0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4,
					0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4,
					0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4,
					0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4,
					0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4,
					0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4 };




REQ
LDI 0x10
PLO R(1).0
LDI 0x00
PHI R(1).1
DEC R1
GLO R1
BNZ 0x07
BQ  0x00
SEQ
BR  0x01


// Q blink --- Q off, load 0x0010 to R(1)
// virtual system RAM, 0x0000 to 0x0039 -> 
byte virtRAM[] = {	0x7A, 0xF8, 0x10, 0xA1, 0xF8, 0x00, 0xB1, 0x21,
					0x81, 0x3A, 0x07, 0x31, 0x00, 0x7B, 0x30, 0x01,
					0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 
					0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 
					0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 
					0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 
					0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 
					0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4 };


00	F8 22	LDI 0x0F
02	A1		PLO R(1).0
03	F8 00	LDI 0x00
05	B1		PHI R(1).1
06	E1		SEX R1
07	34 11	B1 	0x11	'EF1
09	35 15	B2	0x15	'EF2
0B	36 19	B3	0x19	'EF3
0D	37 1D	B4	0x1D	'EF4
0F	30 07	BR  0x07
11	F8 01	LDI	0x01
13	30 1F	BR	0x1F	'OUTPUT
15	F8 02	LDI 0x02
17	30 1F	BR 	0x1F	'OUTPUT
19	F8 03	LDI 0x03
1B	30 1F	BR	0x1F	'OUTPUT
1D	F8 04	LDI	0x04
1F	51		STR R1		'OUTPUT
20	30 07	BR	0x07


// EFx input test -- output EF input # to Memory @ 0x22
// virtual system RAM, 0x0000 to 0x0039 -> 
byte virtRAM[] = {	0xF8, 0x22, 0xA1, 0xF8, 0x00, 0xB1, 0xE1, 0x34,
					0x11, 0x35, 0x15, 0x36, 0x19, 0x37, 0x1D, 0x30,
					0x07, 0xF8, 0x01, 0x30, 0x1F, 0xF8, 0x02, 0x30, 
					0x1F, 0xF8, 0x03, 0x30, 0x1F, 0xF8, 0x04, 0x51, 
					0x30, 0x07, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 
					0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 
					0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 
					0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4 };